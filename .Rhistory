setwd("~/")
q()
find.packages("devtools")
find.package("devtools")
install.packages("devtools")
library(devtools)
find.package("KernSmooth R")
find.package("KernSmooth")
install.package("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
library(devtools)
library("devtools")
find_rtools()
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(cnames, my_data)
?colnames
colnames(my_data)<-cnames
my_data
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2)<-c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
x <- c(44,NA,5,NA)
3*x
y<-rnorm(1000)
z<-rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,40)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
swirl()
install_from_swirl("Getting and Cleaning Data")
0
library(jpeg)
jpeg("getdata-jeff")
jpeg("getdata-jeff", native=TRUE)
?jpeg
jpeg("getdata-jeff")
j<-jpeg("getdata-jeff")
quantile(j, native=TRUE)
quantile(j, native=TRUE, na.rm=TRUE)
quantile(j, na.rm=TRUE, native=TRUE)
summary(j)
head(j)
img <- readJPEG("getdata-jeff",native=TRUE)
img <- JPEG("getdata-jeff",native=TRUE)
img <- jpeg("getdata-jeff",native=TRUE)
img <- jpeg("getdata-jeff")
quantile(img, probs = c(0.3,0.8))
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv("path2csv", stringAsFactors = FALSE)
?read.csv
mydf <- read.csv("path2csv", stringsAsFactors = FALSE)
mydf <- read.csv("path2csv.csv", stringsAsFactors = FALSE)
mydf <- read.csv("path2csv.csv")
mydf <- read.csv(path2csv.csv)
0
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version == !is.na)
filter(cran, r_version == !is.na(r_version))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
setwd("C:/Users/aditya/SkyDrive/projects/github/ProgrammingAssignment2")
a=matrix(1:4,2,2)
a
b=solve(a)
b
source("vector.R")
vec <- 2:10
makeVector(vec)
c<-makeVector(vec)
c
